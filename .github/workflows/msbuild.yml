name: Build, Test, and Analyze

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  UNITY_SOLUTION_FILE_PATH: ../XLGearModifier.Gear/XLGearModifier.Gear.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  
  package_path: "~/XLGearModifier_SDK.2.0.0.unitypackage"

jobs:
  check-paths-changed:
    name: Check Paths Changed
    runs-on: ubuntu-latest
    
    outputs:
      build_asset_bundles: ${{ steps.changes.outputs.asset_bundles_changed }}
      build_mod: ${{ steps.changes.outputs.mod_changed }}
      build_unity: ${{ steps.changes.outputs.unity_changed }}
      build_unity_editor: ${{ steps.changes.outputs.unity_editor_changed }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Paths Changed Filter
        id: changes
        uses: dorny/paths-filter@v2.10.2
        with:
          filters: |
            asset_bundles_changed:
              - './XLGearModifier.Gear/Assets/Gear Done/**'
              - './XLGearModifier.Gear/Assets/Gear Temp/**'
              - './XLGearModifier.Gear/Assets/UserInterface/**'
            mod_changed:
              - './XLGearModifier/**'
            unity_changed:
              - './XLGearModifier.Unity/**'
            unity_editor_changed:
              - './XLGearModifier.Unity.Editor/**'

  build-unity-assembly:
    name: Build XLGearModifier.Unity.dll
    runs-on: windows-latest
    needs: check-paths-changed
    if: |
      needs.check-paths-changed.outputs.build_unity == 'true'
    
    steps:
    - uses: actions/checkout@v3

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Build
      run: msbuild './XLGearModifier.Unity/XLGearModifier.Unity.csproj' -t:rebuild -verbosity:diag -property:Configuration=Release

    - name: Copy DLL
      run: |
        Copy-Item "./XLGearModifier.Unity/bin/${{env.BUILD_CONFIGURATION}}/XLGearModifier.Unity.dll" -Destination "XLGearModifier.Gear/Assets/XLGM_SDK/XLGearModifier.Unity.dll"

    - name: Commit DLL
      run: |
        git config user.name "GitHub Actions"
        git config user.email "<>"
        git switch -c ${{ github.head_ref }} origin/${{ github.head_ref }}
        git commit -m "Updating XLGearModifier.Unity.dll" ./XLGearModifier.Gear/Assets/XLGM_SDK/XLGearModifier.Unity.dll 
        git push --set-upstream origin ${{ github.head_ref }}

  build-unity-editor-assembly:
    name: Build XLGearModifier.Unity.Editor.dll
    runs-on: windows-latest
    needs: [check-paths-changed, build-unity-assembly]
    if: |
      always() &&
      (needs.check-paths-changed.outputs.build_unity == 'true' ||
      needs.check-paths-changed.outputs.build_unity_editor == 'true')

    steps:
    - uses: actions/checkout@v3

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Build
      run: msbuild './XLGearModifier.Unity.Editor/XLGearModifier.Unity.Editor.csproj' -t:rebuild -verbosity:diag -property:Configuration=Release

    - name: Copy DLL
      run: |
        Copy-Item "./XLGearModifier.Unity.Editor/bin/${{env.BUILD_CONFIGURATION}}/XLGearModifier.Unity.Editor.dll" -Destination "XLGearModifier.Gear/Assets/XLGM_SDK/XLGearModifier.Unity.Editor.dll"

    - name: Commit DLL
      run: |
        git config user.name "GitHub Actions"
        git config user.email "<>"
        git switch -c ${{ github.head_ref }} origin/${{ github.head_ref }}
        git commit -m "Updating XLGearModifier.Unity.Editor.dll" ./XLGearModifier.Gear/Assets/XLGM_SDK/XLGearModifier.Unity.Editor.dll
        git push --set-upstream origin ${{ github.head_ref }}

  build-unity-project:
    name: Build Unity Project
    runs-on: ubuntu-latest
    needs: [check-paths-changed, build-unity-editor-assembly]
    if: |
      always() && 
      (needs.check-paths-changed.outputs.build_unity == 'true' ||
      needs.check-paths-changed.outputs.build_unity_editor == 'true' ||
      needs.check-paths-changed.outputs.build_asset_bundles == 'true')
    
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0

    # Cache
    - uses: actions/cache@v2
      name: Cache Library
      with:
        path: XLGearModifier.Gear/Library
        key: Library

    - name: Unity - Builder
      uses: game-ci/unity-builder@v2.0.4
      with:
        unityVersion: 2019.4.8f1
        targetPlatform: StandaloneWindows
        projectPath: ./XLGearModifier.Gear/
        buildMethod: Assets.Editor.CIBuildScript.Build
        customImage: 'unityci/editor:ubuntu-2019.4.8f1-windows-mono-1.0.1'
        buildsPath: ./XLGearModifier.Gear/AssetBundles/StandaloneWindows/

    - name: Copy Asset Bundles
      run: |
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char female/female-bottoms" "XLGearModifier/Assets/char female/female-bottoms"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char female/female-hair" "XLGearModifier/Assets/char female/female-hair"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char female/female-hats" "XLGearModifier/Assets/char female/female-hats"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char female/female-other" "XLGearModifier/Assets/char female/female-other"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char female/female-shoes" "XLGearModifier/Assets/char female/female-shoes"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char female/female-tops" "XLGearModifier/Assets/char female/female-tops"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char male/male-facialhair" "XLGearModifier/Assets/char male/male-facialhair"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char male/male-hair" "XLGearModifier/Assets/char male/male-hair"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char male/male-hats" "XLGearModifier/Assets/char male/male-hats"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char male/male-other" "XLGearModifier/Assets/char male/male-other"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char male/male-pants" "XLGearModifier/Assets/char male/male-pants"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char male/male-shoes" "XLGearModifier/Assets/char male/male-shoes"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/char male/male-tops" "XLGearModifier/Assets/char male/male-tops"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/characters" "XLGearModifier/Assets/characters"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/default-empty-textures" "XLGearModifier/Assets/default-empty-textures"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/easy-day-textures" "XLGearModifier/Assets/easy-day-textures"
        cp "./XLGearModifier.Gear/AssetBundles/StandaloneWindows/user-interface" "XLGearModifier/Assets/user-interface"
    
    - name: Commit Asset Bundles
      run: |
        git config user.name "GitHub Actions"
        git config user.email "<>"
        git switch -c ${{ github.head_ref }} origin/${{ github.head_ref }}
        git commit -m "Updating asset bundles" ./XLGearModifier/Assets/*
        git push --set-upstream origin ${{ github.head_ref }}

  create-unity-package:
    name: Create SDK Unity Package
    runs-on: ubuntu-latest
    needs: build-unity-project
    if: |
      needs.check-paths-changed.outputs.build_unity == 'true' ||
      needs.check-paths-changed.outputs.build_unity_editor == 'true'

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
    
      # Install the packager. We are putting it outside the working directory so we dont include it by mistake
      - name: Install Unity Packager
        run: |
          git clone https://github.com/Lachee/Unity-Package-Exporter.git "../tools/unity-package-exporter"
          dotnet publish -c Release -o ../tools "../tools/unity-package-exporter/UnityPackageExporter"
          
      # Pack the assets
      - name: Package Project
        run: |
          echo "Creating package ${{env.package_path}}"
          dotnet ../tools/UnityPackageExporter.dll --input ./XLGearModifier.Gear/Aseets/XLGM_SDK/ --output ${{env.package_path}}
          
      # Upload artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: XLGearModifier_SDK.2.0.0.unitypackage
          path: ${{env.package_path}}   
    
  build:
    name: Build & Analyze Mod
    runs-on: windows-latest
    needs: build-unity-project
    if: |
      always() &&
      (needs.check-paths-changed.outputs.generate_unitypackage == 'true' || 
      needs.check-paths-changed.outputs.build_asset_bundles == 'true' || 
      needs.check-paths-changed.outputs.build_mod == 'true')

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1
      
    - name: Setup VSTest.console.exe
      uses: darenm/Setup-VSTest@v1
      
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
        
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    #- name: Start SonarCloud Analysis
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
    #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #  run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"MCBTay_XLGearModifier" /o:"mcbtay" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
        
    - name: MSBuild
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: powershell
      run: |
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
        
    #- name: Stop SonarScanner Analysis
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
    #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #  run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      
